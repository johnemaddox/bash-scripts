#!/usr/bin/env bash
set -euo pipefail

usage () {
    echo "git-publish [-f]"
    echo "  Default behavior is to pull, confirm commits, and push."
    echo "Flags:"
    echo "  -f : Skips pull, force pushes all commits"
}

if [ ! -d ".git" ]; then
    echo "ERROR: Not a git repo."
    exit 1
fi

do_pull=true
flags=""
while getopts ":fh" opt; do
    case "$opt" in
        "f")
            do_pull=false
            flags="-f"
            ;;
        "h")
            usage
            exit 1
            ;;
        *)
            echo "ERROR: Invalid argument"
            usage
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))

cur_branch=$(git rev-parse --abbrev-ref HEAD)

if [ $do_pull == true ]; then
    echo ">> Pulling changes <<"
    git stash --quiet
    git pull --rebase --prune origin
    if [ -n "$(git stash list)" ]; then
        git stash pop --quiet
    fi

    echo ">> Confirm commits to publish <<"
    base_commit=$(git merge-base origin/$cur_branch $cur_branch)
    git-log $base_commit..HEAD
else
    echo ">> All commits will be pushed, these are most recent <<"
    git-log -n 5
fi

echo -n "Publish the above commits to $cur_branch (y/n)? "
read reply

if [[ ${reply,,} =~ ^(y|yes)$ ]]; then
    echo ">> Publishing changes <<"
    git push -u $flags origin HEAD

    echo "done."
    exit 0
fi

echo "=> Publish cancelled, no changes have been made."
